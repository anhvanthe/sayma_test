#!/usr/bin/env python3

from litex.soc.tools.remote import RemoteClient

from litejesd204b.common import *

from litescope.software.driver.analyzer import LiteScopeAnalyzerDriver

from libbase.ad9154 import *
from libbase.hmc import *

wb = RemoteClient(port=1235, debug=False)
wb.open()


# # #

# hmc830 config: 100MHz input, 1.5GHz output
hmc830_config = [
	(0x0, 0x20),    # reset
	(0x1, 0x2),
	(0x2, 0x2),     # ref divider = 2
	(0x6, 0x303ca),
	(0x5, 0x1628),  # vco configuration register
	(0x5, 0x60a0),  # vco configuration register
	(0x5, 0xe090),  # vco divider
	(0x5, 0x2818),
	(0x7, 0x14d),
	(0x8, 0xc1beff),
	(0xa, 0x2046),
	(0xb, 0x7c061),
	(0xf, 0x81),
]

# hmc7043 config, 1GHz input:
# 1GHz dac_clk
# 250MHz fpga_clk
# 15.625MHz sysref_clk
hmc7043_config = [
	(0x0, 0x0),
	(0x1, 0x0),
	(0x2, 0x0),
	(0x3, 0x2C),
	(0x4, 0x23),
	(0x6, 0x0),
	(0x7, 0x0),
	(0xA, 0x7),
	(0xB, 0x7),
	(0x46, 0x0),
	(0x50, 0x1F),
	(0x54, 0x3),
	(0x5A, 0x1),
	(0x5B, 0x4),
	(0x5C, 0x0),
	(0x5D, 0x6),
	(0x64, 0x0),
	(0x65, 0x0),
	(0x71, 0x10),
	(0x78, 0x51),
	(0x79, 0x16),
	(0x7A, 0x30),
	(0x7D, 0x12),
	(0x91, 0x2),
	(0x98, 0x0),
	(0x99, 0x0),
	(0x9A, 0x0),
	(0x9B, 0xAA),
	(0x9C, 0xAA),
	(0x9D, 0xAA),
	(0x9E, 0xAA),
	(0x9F, 0x4D),
	(0xA0, 0xDF),
	(0xA1, 0x97),
	(0xA2, 0x3),
	(0xA3, 0x0),
	(0xA4, 0x0),
	(0xAD, 0x0),
	(0xAE, 0x8),
	(0xAF, 0x50),
	(0xB0, 0x4),
	(0xB1, 0xD),
	(0xB2, 0x0),
	(0xB3, 0x0),
	(0xB5, 0x0),
	(0xB6, 0x0),
	(0xB7, 0x0),
	(0xB8, 0x0),
	(0xC8, 0x73),
	(0xC9, 0x1),
	(0xCA, 0x0),
	(0xCB, 0x0),
	(0xCC, 0x0),
	(0xCD, 0x0),
	(0xCE, 0x0),
	(0xCF, 0x0),
	(0xD0, 0x8),
	(0xD2, 0x71),
	(0xD3, 0x40),
	(0xD4, 0x0),
	(0xD5, 0x0),
	(0xD6, 0x0),
	(0xD7, 0x0),
	(0xD8, 0x0),
	(0xD9, 0x0),
	(0xDA, 0x9),
	(0xDC, 0x73),
	(0xDD, 0x1),
	(0xDE, 0x0),
	(0xDF, 0x0),
	(0xE0, 0x0),
	(0xE1, 0x0),
	(0xE2, 0x0),
	(0xE3, 0x0),
	(0xE4, 0x8),
	(0xE6, 0x71),
	(0xE7, 0x40),
	(0xE8, 0x0),
	(0xE9, 0x0),
	(0xEA, 0x0),
	(0xEB, 0x0),
	(0xEC, 0x0),
	(0xED, 0x0),
	(0xEE, 0x9),
	(0xF0, 0x72),
	(0xF1, 0x0),
	(0xF2, 0x1),
	(0xF3, 0x0),
	(0xF4, 0x0),
	(0xF5, 0x0),
	(0xF6, 0x0),
	(0xF7, 0x0),
	(0xF8, 0x8),
	(0xFA, 0x70),
	(0xFB, 0x0),
	(0xFC, 0x1),
	(0xFD, 0x0),
	(0xFE, 0x0),
	(0xFF, 0x0),
	(0x100, 0x0),
	(0x101, 0x0),
	(0x102, 0x3),
	(0x104, 0x73),
	(0x105, 0x4),
	(0x106, 0x0),
	(0x107, 0x0),
	(0x108, 0x0),
	(0x109, 0x0),
	(0x10A, 0x0),
	(0x10B, 0x0),
	(0x10C, 0x8),
	(0x10E, 0x71),
	(0x10F, 0x40),
	(0x110, 0x0),
	(0x111, 0x0),
	(0x112, 0x0),
	(0x113, 0x0),
	(0x114, 0x0),
	(0x115, 0x0),
	(0x116, 0x3),
	(0x118, 0x73),
	(0x119, 0x4),
	(0x11A, 0x0),
	(0x11B, 0x0),
	(0x11C, 0x0),
	(0x11D, 0x0),
	(0x11E, 0x0),
	(0x11F, 0x0),
	(0x120, 0x8),
	(0x122, 0x71),
	(0x123, 0x4),
	(0x124, 0x0),
	(0x125, 0x0),
	(0x126, 0x0),
	(0x127, 0x0),
	(0x128, 0x0),
	(0x129, 0x0),
	(0x12A, 0x3),
	(0x12C, 0x73),
	(0x12D, 0x4),
	(0x12E, 0x0),
	(0x12F, 0x0),
	(0x130, 0x0),
	(0x131, 0x0),
	(0x132, 0x0),
	(0x133, 0x0),
	(0x134, 0x8),
	(0x136, 0x71),
	(0x137, 0x4),
	(0x138, 0x0),
	(0x139, 0x0),
	(0x13A, 0x0),
	(0x13B, 0x0),
	(0x13C, 0x0),
	(0x13D, 0x0),
	(0x13E, 0x1),
	(0x140, 0x73),
	(0x141, 0x0),
	(0x142, 0x1),
	(0x143, 0x0),
	(0x144, 0x0),
	(0x145, 0x0),
	(0x146, 0x0),
	(0x147, 0x0),
	(0x148, 0x8),
	(0x14A, 0x71),
	(0x14B, 0x0),
	(0x14C, 0x1),
	(0x14D, 0x0),
	(0x14E, 0x0),
	(0x14F, 0x0),
	(0x150, 0x0),
	(0x151, 0x0),
	(0x152, 0x3),
]

# configure clocks
hmc830 = HMC830(wb.regs)
hmc7043 = HMC7043(wb.regs)
print("HMC830 present: {:s}".format(str(hmc830.check_presence())))
print("HMC7043 present: {:s}".format(str(hmc7043.check_presence())))

# configure hmc830
for addr, data in hmc830_config:
	hmc830.write(addr, data)
#for i in range(16):
#	print("{:x}".format(hmc830.read(i)))

# configure hmc7043
for addr, data in hmc7043_config:
	hmc7043.write(addr, data)
#for i in range(0x152):
#	print("{:x}".format(hmc7043.read(i)))

## jesd settings
#ps = JESD204BPhysicalSettings(l=8, m=4, n=16, np=16)
#ts = JESD204BTransportSettings(f=2, s=2, k=16, cs=0)
#jesd_settings = JESD204BSettings(ps, ts, did=0x5a, bid=0x5)

# configure ad9514
#ad9154 = AD9154(wb.regs)
#print("AD9154 configuration")
#print("AD9154 present: {:s}".format(str(ad9154.check_presence())))
#print(ad9154.read(AD9154_CHIPTYPE))
#print(ad9154.read(AD9154_PRODIDL))
#print(ad9154.read(AD9154_PRODIDH))


#ad9154.reset()
#ad9154.startup(jesd_settings, linerate=10e9, physical_lanes=0xff)
# show ad9514 status
#ad9154.print_status()

# release/reset jesd core
#wb.regs.control_prbs_config.write(0)
#wb.regs.control_enable.write(0)
#wb.regs.control_enable.write(1)

#time.sleep(1)

# show ad9514 status
#ad9154.print_status()

# # #

wb.close()
